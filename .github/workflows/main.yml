name: Build and Deploy App Into AWS
"on":
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
    paths:
      - backend/src/*.ts
      - backend/src/*.tsx
      - backend/src/*/*.ts
      - backend/src/*/*.tsx
      - frontend/src/*.ts
      - frontend/src/*.tsx
      - frontend/src/*/*.ts
      - frontend/src/*/*.tsx
      - .github/workflows/main.yml
      - Dockerfile
env:
  dockerfilePath: "**/Dockerfile"
  vmImageName: ubuntu-latest
  tag: "${{github.run_id}}"
  AWS_S3_BUCKET: jgrants-dev-bucket-jgrants-447776907223
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
  AWS_REGION: ap-northeast-1
  SOURCE_DIR: frontend/jGrant
  REPOSITORY: jgrantsv3-dev-ecr-repo-01
  IMAGE_TAG: "${{ github.sha }}"
jobs:
  linting_formatting:
    name: LintingFormatting
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40

      - name: Check typescipt files
        run: |
          #!/bin/bash
          changedFiles=()
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file: $file"
            if [[ $file == *.ts || $file == *.tsx ]]; then
              changedFiles+=("$file")
            fi
          done

          echo "CHANGED_FILES=${changedFiles[*]}"

          isCurrentBackend=false

          isCurrentFrontend=false

          isNpmInstalledForBackend=false

          isNpmInstalledForFrontend=false

          for file in ${changedFiles[@]}; do
            
            if [[ "$file" == "backend/"* ]]; then
              if [[ "$isCurrentBackend" == false ]]; then
                cd $GITHUB_WORKSPACE/backend
                isCurrentBackend=true
                isCurrentFrontend=false
              fi

              if [[ "$isNpmInstalledForBackend" == false ]]; then
                echo "Install package for backend with npm install" 
                npm install
                isNpmInstalledForBackend=true
              fi

              echo "backend:$file"    

              npm run lint:pipelinecheck "$GITHUB_WORKSPACE/$file"

              npm run format:pipelinecheck "$GITHUB_WORKSPACE/$file"

            elif [[ "$file" == "frontend/"* ]]; then
              if [[ "$isCurrentFrontend" == false ]]; then
                cd $GITHUB_WORKSPACE/frontend
                isCurrentBackend=false  
                isCurrentFrontend=true                  
              fi

              echo "frontend:$file"

              if [[ "$isNpmInstalledForFrontend" == false ]]; then 
                echo "Install package for frontend with npm install"
                npm install
                isNpmInstalledForFrontend=true
              fi

              npm run lint:pipelinecheck "$GITHUB_WORKSPACE/$file"
              npm run format:pipelinecheck "$GITHUB_WORKSPACE/$file"
            fi
          done
        shell: bash
  build_frontend:
    needs: linting_formatting
    name: DeployAwsCDK
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Build
        run: |
          cd $GITHUB_WORKSPACE/frontend
          npm install
